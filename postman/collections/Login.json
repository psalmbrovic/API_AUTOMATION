{
	"info": {
		"_postman_id": "9a4c8db3-49f5-4d58-b5b1-61c7fbc73906",
		"name": "Login",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "9797408-9a4c8db3-49f5-4d58-b5b1-61c7fbc73906"
	},
	"item": [
		{
			"name": "Merchant",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7aa0a7b5-a979-4e7c-a844-e219626734e1",
						"exec": [
							"pm.test(\"Set token value\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.environment.set(\"token\", jsonData.data.token);  ",
							"  ",
							"}); ",
							"",
							"// Parse the response JSON",
							"let response = pm.response.json();",
							"",
							"// 1. Check overall response structure",
							"pm.test(\"Response structure is valid\", function () {",
							"    pm.expect(response).to.have.property(\"status\", \"success\");",
							"    pm.expect(response).to.have.property(\"message\", \"The process was completed successfully\");",
							"    pm.expect(response).to.have.property(\"data\").that.is.an(\"object\");",
							"});",
							"",
							"// 2. Check the data object keys and values",
							"pm.test(\"Data object structure and values\", function () {",
							"    const data = response.data;",
							"    ",
							"    pm.expect(data).to.have.property(\"fullname\", \"Gamma Test updated\");",
							"    pm.expect(data).to.have.property(\"business_name\", \"Gamma Spark Updated\");",
							"    pm.expect(data).to.have.property(\"mobile_number\", \"8023025722\");",
							"    pm.expect(data).to.have.property(\"is_test\", false);",
							"    pm.expect(data).to.have.property(\"onboarding_stage\", 4);",
							"    pm.expect(data).to.have.property(\"business_nuban\", \"2100001974\");",
							"    pm.expect(data).to.have.property(\"business_bvn\", \"22191702200\");",
							"    pm.expect(data).to.have.property(\"status\", \"ACTIVE\");",
							"    pm.expect(data).to.have.property(\"is_admin\", false);",
							"    pm.expect(data).to.have.property(\"has_bank\", true);",
							"    pm.expect(data).to.have.property(\"is_email_verified\", true);",
							"    pm.expect(data).to.have.property(\"is_verified\", true);",
							"    pm.expect(data).to.have.property(\"has_accepted_terms_and_condition\", null);",
							"    pm.expect(data).to.have.property(\"email\", \"gammaspark@yahoo.com\");",
							"    pm.expect(data).to.have.property(\"has_2fa\", true);",
							"    pm.expect(data).to.have.property(\"token\").that.is.a(\"string\");",
							"    pm.expect(data).to.have.property(\"role\", \"user\");",
							"    pm.expect(data).to.have.property(\"permissions\").that.is.an(\"array\").and.has.length.greaterThan(0);",
							"    pm.expect(data).to.have.property(\"product_tour\", \"OFF\");",
							"    pm.expect(data).to.have.property(\"payout_approval\", false);",
							"});",
							"",
							"// 3. Check specific permission items",
							"pm.test(\"Permissions array contains expected items\", function () {",
							"    const expectedPermissions = [",
							"        \"audit_create\", \"audit_list\", \"banks_lookup\", \"account_deactivate\", ",
							"        \"download_lookup\", \"account_search\", \"transaction_search\", \"account_create\",",
							"        \"list_banks\", \"merchant_change_pw\", \"merchant_register\", \"merchant_edit\",",
							"        \"get_merchant_fee\", \"merchant_info\", \"merchant_login\", \"merchant_logout\",",
							"        \"merchant_otp_generate\", \"merchant_overview\", \"merchant_reset_keys\",",
							"        \"merchant_reset_password_complete\", \"merchant_reset_password_init\",",
							"        \"preference_create\", \"preference_edit\", \"preference_list\", \"subaccount_create\",",
							"        \"subaccount_edit\", \"subaccount_list\", \"template_create\", \"template_list\",",
							"        \"transfer_create\", \"upload_file\", \"user_create\", \"user_invite\", \"user_list\",",
							"        \"user_patch\", \"user_permission_list\", \"user_permission_get\", \"user_role_create\",",
							"        \"user_role_get\", \"user_role_list\", \"user_role_update\", \"vnuban_activate\",",
							"        \"vnuban_bulk_create\", \"vnuban_create\", \"vnuban_deactivate\", \"vnuban_edit\",",
							"        \"vnuban_list\", \"vnuban_lookup\", \"vnuban_stats\", \"vnubantx_list\", \"direct_debit\",",
							"        \"settlements\", \"customers\", \"bank_enquiry\", \"merchant_create\", \"create_vnuban_scheme\",",
							"        \"payouts\", \"initiate_payouts\", \"view_payouts\", \"approve_payouts\", \"account_statement\"",
							"    ];",
							"",
							"    const permissions = response.data.permissions;",
							"",
							"    // Check if each expected permission exists in the permissions array",
							"    expectedPermissions.forEach(permission => {",
							"        pm.expect(permissions).to.include(permission);",
							"    });",
							"});",
							"",
							"// 4. Validate token format (optional)",
							"pm.test(\"Token is a valid JWT\", function () {",
							"    const token = response.data.token;",
							"    const parts = token.split('.');",
							"    pm.expect(parts).to.have.lengthOf(3); // JWT should have three parts separated by dots",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "867571e6-fdb7-4c1c-a169-030835b627cf",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"gammaspark@yahoo.com\",\n    \"password\": \"Password12$\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{prod_url}}/v2/dashboard/merchants/login",
					"host": [
						"{{prod_url}}"
					],
					"path": [
						"v2",
						"dashboard",
						"merchants",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "07f32350-4bc7-4b35-bc70-c55d7f72d50d",
						"exec": [
							"pm.test(\"Set token value\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.environment.set(\"admin_token\", jsonData.data.token);  ",
							"  ",
							"}); ",
							"// Parse the JSON response body",
							"const response = pm.response.json();",
							"",
							"// Check overall response status",
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Check that the response has the expected 'status' and 'message' fields",
							"pm.test(\"Status is success\", function () {",
							"    pm.expect(response.status).to.eql(\"success\");",
							"});",
							"",
							"pm.test(\"Message is correct\", function () {",
							"    pm.expect(response.message).to.eql(\"The process was completed successfully\");",
							"});",
							"",
							"// Check presence and type of the 'data' field",
							"pm.test(\"Data object exists and is valid\", function () {",
							"    pm.expect(response).to.have.property(\"data\");",
							"    pm.expect(response.data).to.be.an(\"object\");",
							"});",
							"",
							"// Verify specific fields within the 'data' object",
							"pm.test(\"Data contains correct user information\", function () {",
							"    pm.expect(response.data.fullname).to.eql(\"Benjamin Alamu\");",
							"    pm.expect(response.data.mobile_number).to.eql(\"08036351041\");",
							"    pm.expect(response.data.is_test).to.be.false;",
							"    pm.expect(response.data.status).to.be.null;",
							"    pm.expect(response.data.is_admin).to.be.true;",
							"    pm.expect(response.data.email).to.eql(\"benjamin.a@woven.finance\");",
							"    pm.expect(response.data.role).to.eql(\"admin\");",
							"    pm.expect(response.data.payout_approval).to.be.false;",
							"    ",
							"    // Check if the 'token' field is a non-empty string",
							"    pm.expect(response.data.token).to.be.a(\"string\").and.to.not.be.empty;",
							"});",
							"",
							"// Verify the 'permissions' array",
							"pm.test(\"Permissions array is present and contains expected permissions\", function () {",
							"    pm.expect(response.data).to.have.property(\"permissions\").that.is.an(\"array\");",
							"",
							"    const expectedPermissions = [",
							"        \"admin_fees_create\",",
							"        \"admin_disable_banks\",",
							"        \"admin_fees_edit\",",
							"        \"admin_merchant_edit\",",
							"        \"admin_enable_banks\",",
							"        \"admin_list_transcations\",",
							"        \"admin_get_merchant_fee\",",
							"        \"admin_list_admin_users\",",
							"        \"admin_list_banks\",",
							"        \"admin_merchant_list\",",
							"        \"admin_list_vnuban\",",
							"        \"audit_create\",",
							"        \"audit_list\",",
							"        \"banks_lookup\",",
							"        \"account_deactivate\",",
							"        \"download_lookup\",",
							"        \"account_search\",",
							"        \"transaction_search\",",
							"        \"account_create\",",
							"        \"list_banks\",",
							"        \"merchant_change_pw\",",
							"        \"merchant_register\",",
							"        \"merchant_edit\",",
							"        \"get_merchant_fee\",",
							"        \"merchant_info\",",
							"        \"merchant_login\",",
							"        \"admin_login\",",
							"        \"merchant_logout\",",
							"        \"merchant_otp_generate\",",
							"        \"merchant_overview\",",
							"        \"merchant_reset_keys\",",
							"        \"merchant_reset_password_complete\",",
							"        \"merchant_reset_password_init\",",
							"        \"preference_create\",",
							"        \"preference_edit\",",
							"        \"preference_list\",",
							"        \"subaccount_create\",",
							"        \"subaccount_edit\",",
							"        \"subaccount_list\",",
							"        \"template_create\",",
							"        \"template_list\",",
							"        \"transfer_create\",",
							"        \"upload_file\",",
							"        \"user_create\",",
							"        \"user_invite\",",
							"        \"user_list\",",
							"        \"user_patch\",",
							"        \"user_permission_list\",",
							"        \"user_permission_get\",",
							"        \"user_role_create\",",
							"        \"user_role_get\",",
							"        \"user_role_list\",",
							"        \"user_role_update\",",
							"        \"vnuban_activate\",",
							"        \"vnuban_bulk_create\",",
							"        \"vnuban_create\",",
							"        \"vnuban_deactivate\",",
							"        \"vnuban_edit\",",
							"        \"vnuban_list\",",
							"        \"vnuban_lookup\",",
							"        \"vnuban_stats\",",
							"        \"vnubantx_list\",",
							"        \"direct_debit\",",
							"        \"settlements\",",
							"        \"customers\",",
							"        \"bank_enquiry\",",
							"        \"merchant_create\",",
							"        \"create_vnuban_scheme\",",
							"        \"payouts\",",
							"        \"bulk_query\",",
							"        \"bulk_retry\",",
							"        \"account_statement\",",
							"        \"wema_missing_inflows\"",
							"    ];",
							"",
							"    // Check that each expected permission is in the permissions array",
							"    expectedPermissions.forEach(permission => {",
							"        pm.expect(response.data.permissions).to.include(permission);",
							"    });",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "06aac5e3-22b9-47a6-93c2-2b8210909369",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"benjamin.a@woven.finance\",\n    \"password\": \"Opyson8085!\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{prod_url}}/v2/admin/merchants/login",
					"host": [
						"{{prod_url}}"
					],
					"path": [
						"v2",
						"admin",
						"merchants",
						"login"
					]
				}
			},
			"response": []
		}
	]
}